import BotWhatsapp from '@bot-whatsapp/bot';
import { dailyTipsFlow } from './dailyTips/start';
import { conversationModeStartFlow } from './conversationMode/start';
import { time } from 'src/@types/time';
import { finalyFlow } from './finalyFlow';

export const mainMenuFlow = BotWhatsapp.addKeyword(BotWhatsapp.EVENTS.ACTION)
    .addAnswer(["1Ô∏è‚É£ Tips diarios üìù",
        "2Ô∏è‚É£ modo conversacion üó£Ô∏è",
        "3Ô∏è‚É£ Salir de la monoton√≠a üòà",
        "4Ô∏è‚É£ Premium üåü",
        /*         "5Ô∏è‚É£ Configuraci√≥n ‚öôÔ∏è",
                "6Ô∏è‚É£ Regalos üéÅ",
                "7Ô∏è‚É£ Recordatorios üìÖ",
                "8Ô∏è‚É£ Planificador de citas üé°", */


    ], { capture: true, idle: time['2_MINUTES'] }, async (ctx, { state, gotoFlow, fallBack }) => {
        try {
            const currentFlow = await state.getMyState()?.currentFlow

            if (ctx.idleFallBack) {
                return await gotoFlow(finalyFlow)
            }
            if (!currentFlow) {
                if (!ctx.body.includes("1") && !ctx.body.includes("2") && !ctx.body.includes("3") && !ctx.body.includes("4") && !ctx.body.toUpperCase().includes("TIPS DIARIOS") && !ctx.body.toUpperCase().includes("MODO CONVERSACION")) {
                    return fallBack("Por favor, elige una opci√≥n v√°lida üôè")
                }
                if (ctx.body === "1" || ctx.body.toUpperCase() === "TIPS DIARIOS") {
                    await state.update({ currentFlow: "dailyTipsFlow" })
                    return await gotoFlow(dailyTipsFlow)
                }
                if (ctx.body === "2" || ctx.body.toUpperCase() === "MODO CONVERSACION") {
                    await state.update({ currentFlow: "conversationModeStartFlow" })
                    return await gotoFlow(conversationModeStartFlow)
                }
            }
        } catch (err) {
            console.log(`[ERROR]:`, err)
            return
        }
    })